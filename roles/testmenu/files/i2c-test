#!/bin/bash

sudo modprobe i2c-dev # to prevent problems.

show_id_register() {
    local PCIDEV=$1
    local REGISTER_ADDR=$2
    local BIT_POSITION=$3
    local NEW_BIT_VALUE=$4
    local REGISTER_IO=$5
    
    # Get the I2C bus number
    local I2CBus=$(ls -l /sys/bus/i2c/devices/ | grep ${PCIDEV} | awk '{print $9}' | grep i2c | sed 's/i2c-//')

    # Check if the mux device is present
    if (sudo i2cget -y ${I2CBus} ${REGISTER_ADDR} 0x0 2>/dev/null >/dev/null); then
         # Read the current register value
        local dat=$(sudo i2cget -y ${I2CBus} ${REGISTER_ADDR} 0x0 2>/dev/null)

        # Modify the bit
        if [ $NEW_BIT_VALUE -eq 1 ]; then
            dat=$(($dat | (1 << BIT_POSITION)))
        else
            dat=$(($dat & ~(1 << BIT_POSITION)))
        fi

        # Write the modified value back to the register
        sudo i2cset -y ${I2CBus} ${REGISTER_ADDR} 0x0 $dat b

        # Optional: Read the board ID and dump eeprom
        sudo i2cdump -y ${I2CBus} 0x55 b
        sudo i2cset -y ${I2CBus} ${REGISTER_IO} 0x03 0x3F b
        sudo i2cset -y ${I2CBus} ${REGISTER_IO} 0x01 0x3F b
        sudo i2cget -y ${I2CBus} ${REGISTER_IO} 0x0 b
        sudo i2cset -y ${I2CBus} ${REGISTER_IO} 0x01 0xBF b
        sudo i2cget -y ${I2CBus} ${REGISTER_IO} 0x0 b
        sudo i2cset -y ${I2CBus} ${REGISTER_IO} 0x01 0xFF b
        sudo i2cget -y ${I2CBus} ${REGISTER_IO} 0x0 b

        # Reset the bit (example)
        dat=$(sudo i2cget -y ${I2CBus} ${REGISTER_ADDR} 0x0)
        dat=$((dat & ~(1 << BIT_POSITION)))
        sudo i2cset -y ${I2CBus} ${REGISTER_ADDR} 0x0 $dat b      
    else
        let local slot=$REGISTER_ADDR-112
        echo "No device found on I2C/PCIDEV bus: ${PCIDEV} on Slot: ${slot}!"
    fi
}


modify_i2c_register() {
    local PCIDEV=$1
    local REGISTER_ADDR=$2
    local BIT_POSITION=$3
    local NEW_BIT_VALUE=$4

    # Get the I2C bus number
    local I2CBus=$(ls -l /sys/bus/i2c/devices/ | grep ${PCIDEV} | awk '{print $9}' | grep i2c | sed 's/i2c-//')

    # Check if the device is present
    if (sudo i2cget -y ${I2CBus} ${REGISTER_ADDR} 0x0 2>/dev/null >/dev/null); then
        # Read the current register value
        local dat=$(sudo i2cget -y ${I2CBus} ${REGISTER_ADDR} 0x0 2>/dev/null)

        # Modify the bit
        if [ $NEW_BIT_VALUE -eq 1 ]; then
            dat=$(($dat | (1 << BIT_POSITION)))
        else
            dat=$(($dat & ~(1 << BIT_POSITION)))
        fi

        # Write the modified value back to the register
        sudo i2cset -y ${I2CBus} ${REGISTER_ADDR} 0x0 $dat b

        # Optional: Dump the EEPROM data
        sudo i2cdump -y ${I2CBus} 0x55 b

        # Reset the bit (example)
        dat=$(sudo i2cget -y ${I2CBus} ${REGISTER_ADDR} 0x0)
        dat=$((dat & ~(1 << BIT_POSITION)))
        sudo i2cset -y ${I2CBus} ${REGISTER_ADDR} 0x0 $dat b
    else
        let local slot=$REGISTER_ADDR-112
        echo "No device found on I2C/PCIDEV bus: ${PCIDEV} on Slot: ${slot}!"
    fi
}

# Example usage
PCIDEV="0000:00:15.0"
let REGISTER_ADDR=0x70
BIT_POSITION=0
NEW_BIT_VALUE=1
REGISTER_IO=0x3d 

modify_i2c_register $PCIDEV $REGISTER_ADDR $BIT_POSITION $NEW_BIT_VALUE

PCIDEV="0000:00:15.1"

let REGISTER_ADDR=0x70 
for i in {0..7}
do 
  # modify_i2c_register $PCIDEV $REGISTER_ADDR $BIT_POSITION $NEW_BIT_VALUE
  show_id_register $PCIDEV $REGISTER_ADDR $BIT_POSITION $NEW_BIT_VALUE $REGISTER_IO
  let REGISTER_ADDR=$REGISTER_ADDR+1
done
